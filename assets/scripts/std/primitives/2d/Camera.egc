<?xml version="1.0" encoding="utf-8"?>
<Entity extends="std.display.Base">
	<_States>
		<_State id="displayType"><Value>Camera</Value></_State>
		
		<State><Id>command_updateCamera</Id><Type>Boolean</Type><Value>false</Value></State>
	
		<State><Id>captureAreaX</Id><Type>Decimal</Type><Value>0</Value></State>
		<State><Id>captureAreaY</Id><Type>Decimal</Type><Value>0</Value></State>
		<State><Id>captureAreaWidth</Id><Type>Decimal</Type><Value>0</Value></State>
		<State><Id>captureAreaHeight</Id><Type>Decimal</Type><Value>0</Value></State>
	
		<State><Id>maxBoundsX</Id><Type>Decimal</Type><Value>0</Value></State>
		<State><Id>maxBoundsY</Id><Type>Decimal</Type><Value>0</Value></State>
		<State><Id>maxBoundsWidth</Id><Type>Decimal</Type><Value>2280</Value></State>
		<State><Id>maxBoundsHeight</Id><Type>Decimal</Type><Value>1440</Value></State>
	
	
		<State><Id>minBoundsWidthRatio</Id><Type>Decimal</Type><Value>0.8421052631578947</Value></State>
		<State><Id>minBoundsHeightRatio</Id><Type>Decimal</Type><Value>0.8888888888888889</Value></State>
		<State><Id>minBoundsHorizontalAlign</Id><Type>Text</Type><Value>Center</Value></State>
		<State><Id>minBoundsVerticalAlign</Id><Type>Text</Type><Value>Middle</Value></State>
	
		<State><Id>x</Id><Type>Decimal</Type><Value>0</Value></State>
		<State><Id>y</Id><Type>Decimal</Type><Value>0</Value></State>
		<State><Id>percX</Id><Type>Decimal</Type><Value>0</Value></State>
		<State><Id>percY</Id><Type>Decimal</Type><Value>0</Value></State>
		<State><Id>width</Id><Type>Decimal</Type><Value>2280</Value></State>
		<State><Id>height</Id><Type>Decimal</Type><Value>1440</Value></State>
		<State><Id>zoom</Id><Type>Decimal</Type><Value>1</Value></State>
		<State><Id>useScenePercentage</Id><Type>Boolean</Type><Value>false</Value></State>
		<State><Id>respectSceneBounds</Id><Type>Boolean</Type><Value>false</Value></State>
	</_States>
		
	<_Actions>
		<Action>
			<Id>Camera Update</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//mixed
					it.stop();
					me.set('command_updateCamera', true);
				</Script>
			</Scripts>
		</Action>
				
		<Action>
			<Id>WaitFor</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script><![CDATA[
				    it.addToState('delayCurrent',Logic.getDt());
				    
				    if (it.getState('delayCurrent')>it.getState('delay'))
				    {
					    me.stopAction('WaitFor');
					    
					    //Callback (Action finished)
						it.setState('delayCurrent',0);
						it.s('cbEntity').sa(it.s('cbAction'));
					}
				]]></Script>
			</Scripts>
			<States>
				<State><Id>delayCurrent</Id><Type>Decimal</Type><Value>0</Value></State>
				<State><Id>delay</Id><Type>Decimal</Type><Value>0</Value></State>
				<State><Id>cbEntity</Id><Type>Dynamic</Type><Value>null</Value></State>
				<State><Id>cbAction</Id><Type>Text</Type><Value>Undefined</Value></State>
			</States>
		</Action>
	</_Actions>
		
	<_Triggers>
		<Trigger>
			<Event>StageResized</Event>
			<Target>TargetNone</Target>
			<Scripts>
				<Script>
					me.sa('WaitFor',{delay:0.1,cbEntity:me,cbAction:"Camera Update"});
				</Script>
			</Scripts>
		</Trigger>
	</_Triggers>
</Entity>