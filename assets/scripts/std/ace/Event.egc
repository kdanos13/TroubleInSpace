<?xml version="1.0" encoding="utf-8"?>
<Entity extends="std.core.Base">
	<_States>
		<State><Id>EventCollectionChild</Id><Type>Text</Type><Value>Event</Value></State>
		<State><Id>EventChild</Id><Type>Text</Type><Value>SubEvent</Value></State>
	
		<State><Id>conditions</Id><Type>Dynamic</Type><Value>null</Value></State>
		<State><Id>actions</Id><Type>Dynamic</Type><Value>null</Value></State>
		<State><Id>subevents</Id><Type>Dynamic</Type><Value>null</Value></State>
	
		<State><Id>conditionChecked</Id><Type>Integer</Type><Value>0</Value></State>
		<State><Id>actionExecuted</Id><Type>Integer</Type><Value>0</Value></State>
	
		<State><Id>picked</Id><Type>Dynamic</Type><Value>null</Value></State>
		<State><Id>triggeringEntity</Id><Type>Dynamic</Type><Value>null</Value></State>
	</_States>
	
	<_Actions>
		<_Action id="Constructor">
			<_Scripts>
				<Script>
					me.setState('conditions',[]);
					me.setState('actions',[]);
					me.setState('subevents',[]);
					
					for (child of me.getChildren())
					{
						if (child.getState('EventChild')=='Condition')
						{
							//Display.error('Condition found');
							me.getState('conditions').push(child);
						}
						else if (child.getState('EventChild')=='Action')
						{
							//Display.error('Action found');
							me.getState('actions').push(child);
						}
					}
				</Script>
			</_Scripts>
		</_Action>

		<Action>
			<Id>Trigger</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					me.stopAction('Trigger');
					
					me.setState('conditionChecked',0);
					
					if (me.getState('conditions').length>me.getState('conditionChecked'))
					{
						me.getState('conditions')[me.getState('conditionChecked')].forceAction('Evaluate');
					}
					else
					{
						me.forceAction('StartActions');
					}
				</Script>
			</Scripts>
		</Action>
				
		<Action>
			<Id>ConditionCallback</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//forced
					if (it.getState('feedback'))
					{
						//Display.error("feedback True");
						me.setState('conditionChecked',me.getState('conditionChecked')+1);
						if (me.getState('conditions').length>me.getState('conditionChecked'))
						{
							me.getState('conditions')[me.getState('conditionChecked')].forceAction('Evaluate');
						}
						else
						{
							me.forceAction('StartActions');
						}
					}
					else
					{
						//Display.error("feedback False");
					}
				</Script>
			</Scripts>
			<States>
				<State><Id>feedback</Id><Type>Boolean</Type><Value>false</Value></State>
			</States>
		</Action>
				
		<Action>
			<Id>StartActions</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//me.stopAction('TriggerEveryFrame'); //FORCED
					
					me.setState('actionExecuted',0);
					
					if (me.getState('actions').length>me.getState('actionExecuted'))
					{
						me.getState('actions')[me.getState('actionExecuted')].forceAction('Execute');
					}
				</Script>
			</Scripts>
		</Action>
				
		<Action>
			<Id>ActionCallback</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//forced
					
					me.setState('actionExecuted',me.getState('actionExecuted')+1);
					if (me.getState('actions').length>me.getState('actionExecuted'))
					{
						me.getState('actions')[me.getState('actionExecuted')].forceAction('Execute');
					}
				</Script>
			</Scripts>
		</Action>
	</_Actions>
</Entity>