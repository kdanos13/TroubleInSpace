<Entity>
	<_States>
        <_State id="touchable"><Value>true</Value></_State>
	</_States>

	<_Actions>
		<_Action id="Constructor">
			<_Scripts>
				<Script>
					me.sa('WaitFor',{delay:Logic.random(2,5), cbEntity:me, cbAction:"Play Random Expression", delayCurrent:0});
				</Script>
			</_Scripts>
		</_Action>
		
		<Action>
			<Id>Play Random Expression</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
				    //forced
				    
				    var l_moviePlayer = me.s('obj_player');
				    var l_randomExpr = Logic.random(1,3);
				    if (l_randomExpr==1)
				    {
				        l_moviePlayer.play('~faceExpression2_indifferent_mc');      //Whistling
				        me.sa('DelayedWhistle',{delay:0.25, delayCurrent:0});
				    }
				    else if (l_randomExpr==2)
				        l_moviePlayer.play('~faceExpression1_surprised_mc');        //Happy
				    else if (l_randomExpr==3)
				        l_moviePlayer.play('~faceExpression5_butterfly_mc');        //Butterfly
				    
					me.sa('WaitFor',{delay:Logic.random(5,12), cbEntity:me, cbAction:"Play Random Expression", delayCurrent:0});
				</Script>
			</Scripts>
		</Action>
		
		<Action>
			<Id>Play Expression</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
				    //forced
				    
				    var l_moviePlayer = me.s('obj_player');
				    
				    me.getAction('WaitFor').stop();
				    me.getAction('DelayedWhistle').stop();
				    
				    //If Whistling sound playing, stop it
				    if (Sound.isPlaying('sound:troubles_in_space.whistle'))
				        Sound.stopSound('sound:troubles_in_space.whistle');
				    
				    if (it.s('expression')=='win')
				        l_moviePlayer.loop('~faceExpression8_winner_mc');
				    else if (it.s('expression')=='lose')
				        l_moviePlayer.loop('~faceExpression3_confused_mc');
					else if (it.s('expression')=='star')
				        l_moviePlayer.play('~faceExpression4_smarty_mc');
				</Script>
			</Scripts>
			<States>
				<State><Id>expression</Id><Type>Text</Type><Value>Undefined</Value></State>
			</States>
		</Action>
		
		<Action>
			<Id>WaitFor</Id>
			<Concurrency>Transient</Concurrency>
			<Scripts>
				<Script><![CDATA[
				    it.addToState('delayCurrent',Logic.getDt());
				    
				    if (it.getState('delayCurrent')>it.getState('delay'))
				    {
					    it.stop();
					    
					    //Callback (Action finished)
						it.setState('delayCurrent',0);
						it.s('cbEntity').fa(it.s('cbAction'));
					}
				]]></Script>
			</Scripts>
			<States>
				<State><Id>delayCurrent</Id><Type>Decimal</Type><Value>0</Value></State>
				<State><Id>delay</Id><Type>Decimal</Type><Value>0</Value></State>
				<State><Id>cbEntity</Id><Type>Dynamic</Type><Value>null</Value></State>
				<State><Id>cbAction</Id><Type>Text</Type><Value>Undefined</Value></State>
			</States>
		</Action>
		
		<Action>
			<Id>DelayedWhistle</Id>
			<Concurrency>Transient</Concurrency>
			<Scripts>
				<Script><![CDATA[
				    it.addToState('delayCurrent',Logic.getDt());
				    
				    if (it.getState('delayCurrent')>it.getState('delay'))
				    {
					    it.stop();
					    it.setState('delayCurrent',0);
					    e('Untitled Project').fa('Play Sound', {soundName: "whistle"});
					}
				]]></Script>
			</Scripts>
			<States>
				<State><Id>delayCurrent</Id><Type>Decimal</Type><Value>0</Value></State>
				<State><Id>delay</Id><Type>Decimal</Type><Value>0</Value></State>
			</States>
		</Action>
	</_Actions>
</Entity>