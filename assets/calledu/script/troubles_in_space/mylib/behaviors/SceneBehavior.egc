<Entity>
	<_States>
        <_State id="gravityY"><Value>1200</Value></_State>
        <_State id="name"><Value>Current Scene</Value></_State>
        <State><Id>starsCollected</Id><Type>Integer</Type><Value>0</Value></State>
	</_States>
	
	<_Actions>
	    <_Action id="Constructor">
			<_Scripts>
				<Script>
				    l_currentLevel = e('Untitled Project').s('currentLevel');
					if (l_currentLevel>=11 && 16>l_currentLevel)
					{
					    var snowParticle = Logic.create('temp.Particle');
					    snowParticle.set('2DMeshParticleEmitterForm','snow');
					    me.insertChild(snowParticle,0);
					    snowParticle.setZorder("bottom");
					    snowParticle.setZorder("oneUp");
					    snowParticle.setZorder("oneUp");
					    snowParticle.setZorder("oneUp");
					    snowParticle.setZorder("oneUp");
					}
					else if (l_currentLevel>=16 && 21>l_currentLevel)
					{
					    var bubbleParticle = Logic.create('temp.Particle');
					    bubbleParticle.set('2DMeshParticleEmitterForm','bubble');
					    bubbleParticle.set('emitY',1380);
					    me.insertChild(bubbleParticle,0);
					    bubbleParticle.setZorder("bottom");
					    bubbleParticle.setZorder("oneUp");
					    bubbleParticle.setZorder("oneUp");
					}
					
					e('Untitled Project').fa('Loop Music', {inMenu: false});
					
					ga('send', {
                      hitType: 'event',
                      eventCategory: 'Level',
                      eventAction: 'Entered',
					  eventLabel: l_currentLevel
                    });
				</Script>
			</_Scripts>
		</_Action>
		
		<Action>
			<Id>Level Won</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
				    //forced
				    
				    //Store Stars
				    l_starsPerLevel = e('Untitled Project').s('starsPerLevel');
				    l_currentLevel = e('Untitled Project').s('currentLevel');
				    l_starsCollected = me.s('starsCollected');
					
					e('Untitled Project').set('lastLevelStars', l_starsCollected);
				    
				    if (!l_starsPerLevel.exists(l_currentLevel))
				    {
				        l_starsPerLevel.set(l_currentLevel,l_starsCollected);
				        Logic.getStorage().set(Std.string(l_currentLevel), l_starsCollected );
				    }
				    else
				    {
				        if (l_starsCollected>l_starsPerLevel.get(l_currentLevel))
				        {
				            l_starsPerLevel.set(l_currentLevel,l_starsCollected);
				            Logic.getStorage().set(Std.string(l_currentLevel), l_starsCollected );
				        }
				    }
				    
					//Unlock next level preemptively
					var l_currentLevel = e('Untitled Project').s('currentLevel');
					var l_gotoLevel = l_currentLevel+1;
					
					//Set highest unlocked level
					if (l_gotoLevel>e('Untitled Project').s('unlockedLevel'))
					{
						e('Untitled Project').set('unlockedLevel', l_gotoLevel);
						Logic.getStorage().set('unlockedLevel', e('Untitled Project').s('unlockedLevel') );    
					}
					
				    //Play Sound
				    e('Untitled Project').fa('Play Sound', {soundName: "victory2"});
				    
					e('Alf Sprite').fa('Play Expression', {expression:'win'});
					
					//Hide Pause Button
					e('scenePauseButton').set('visible', false);
					
					me.sa('WaitFor',{delay:2, cbEntity:me, cbAction:"Say Letter", delayCurrent:0});
				</Script>
			</Scripts>
		</Action>
		
		<Action>
			<Id>Level Lost</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
				    //forced
				    
				    //Play Sound
				    e('Untitled Project').fa('Play Sound', {soundName: "aww"});
				    
					e('Alf Sprite').fa('Play Expression', {expression:'lose'});
					
					//Hide Pause Button
					e('scenePauseButton').set('visible', false);
					
					me.sa('WaitFor',{delay:3, cbEntity:e('Untitled Project'), cbAction:"Restart Level", delayCurrent:0});
				</Script>
			</Scripts>
		</Action>
		
		<Action>
			<Id>Say Letter</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
				    l_currentLevel = e('Untitled Project').s('currentLevel');
					e('Untitled Project').fa('Play Sound', {soundName: "sound_"+Std.string(l_currentLevel)});
					
					me.sa('WaitFor',{delay:4, cbEntity:me, cbAction:"Next Level", delayCurrent:0});
				</Script>
			</Scripts>
		</Action>
		
		<Action>
			<Id>Next Level</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					e('Untitled Project').fa('Stop Music');
					e('Untitled Project').sa('Run Level', {levelName:'troubles_in_space.levels.level7.Level', preloader:false});
				</Script>
			</Scripts>
		</Action>
		
		<Action>
			<Id>WaitFor</Id>
			<Concurrency>Transient</Concurrency>
			<Scripts>
				<Script><![CDATA[
				    it.addToState('delayCurrent',Logic.getDt());
				    
				    if (it.getState('delayCurrent')>it.getState('delay'))
				    {
					    it.stop();
					    
					    //Callback (Action finished)
						it.setState('delayCurrent',0);
						it.s('cbEntity').fa(it.s('cbAction'));
					}
				]]></Script>
			</Scripts>
			<States>
				<State><Id>delayCurrent</Id><Type>Decimal</Type><Value>0</Value></State>
				<State><Id>delay</Id><Type>Decimal</Type><Value>0</Value></State>
				<State><Id>cbEntity</Id><Type>Dynamic</Type><Value>null</Value></State>
				<State><Id>cbAction</Id><Type>Text</Type><Value>Undefined</Value></State>
			</States>
		</Action>
	</_Actions>
</Entity>